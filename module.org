#+TITLE: Modusecurity连接器模块儿
#+AUTHOR: sqlfocus


* 入口
  #+BEGIN_EXAMPLE
  ~/src/ngx_http_modsecurity_module.c

  ngx_module_t ngx_http_modsecurity_module = {
      ...
  }
  #+END_EXAMPLE

* 初始化流程
本项目以模块儿的形式组织代码，很多插入点在NGINX整体流程中，因此后续的
代码流程以nginx的初始化为主线。
  #+BEGIN_EXAMPLE
  -main()                                   nginx入口
    -ngx_preinit_modules()                  初始化ngx_modules[].index及模块儿名
    -ngx_init_cycle()                       配置解析
        -ngx_cycle_modules()                创建模块儿的配置环境, 并初始化
        -ngx_modules[]->ctx->create_conf()  NGX_CORE_MODULE类型模块创建配置环境,ngx_cycle->conf_ctx[]
        -->ngx_http_modsecurity_create_main_conf()   递归解析时，调用非CORE模块儿, ~/src/ngx_http_modsecurity_module.c
          -***msc_init()***
        -->ngx_http_modsecurity_create_loc_conf()    递归解析location时
          -***msc_create_rules_set()***
        -ngx_modules[]->ctx->preconfiguration()      递归解析http{}前
        -ngx_conf_parse()
            -ngx_conf_handler()             解析配置主入口，参考ngx_http_modsecurity_commands[]
                -查找ngx_cycle_t->modules[]->commands[]
                   获取对应的处理命令
                -调用命令->set()
        -ngx_modules[]->ctx->init_conf()    未配置的项采用默认值, 并合并上层配置到下层
        -->ngx_http_modsecurity_merge_loc_conf()
          -***msc_rules_add_remote()***              添加远程配置
          -***msc_rules_add_file()***                添加本地规则文件
          -***msc_rules_add()***                     添加nginx配置文件内的规则
        -ngx_modules[]->ctx->postconfiguration()     递归解析http{}后
        -->ngx_http_modsecurity_init()               注册各阶段的处理句柄
          -ngx_http_modsecurity_rewrite_handler()        NGX_HTTP_REWRITE_PHASE
          -ngx_http_modsecurity_pre_access_handler()     NGX_HTTP_PREACCESS_PHASE
          -ngx_http_modsecurity_log_handler()            NGX_HTTP_LOG_PHASE
          -ngx_http_modsecurity_header_filter()          回应头处理阶段
          -ngx_http_modsecurity_body_filter()            响应体处理阶段
        -ngx_init_modules()                 模块儿启动前的特殊准备，主要针对集成的第三方
            -ngx_cycle_t->modules[]->init_module()
    ---------------单进程模式---------------
    -ngx_single_process_cycle()
        -ngx_modules[]->init_process()      模块儿进程级初始化(所有)
    -----------master+worker模式------------
    -ngx_master_process_cycle()
        -ngx_start_worker_processes()
            -ngx_worker_process_cycle()     fork()后，worker进程的执行入口点
                -ngx_worker_process_init()
                    -ngx_modules[]->init_process()
                                            模块儿进程级别初始化

  #+END_EXAMPLE

* 检测流程
  #+BEGIN_EXAMPLE
  -ngx_init_cycle()                            配置解析入口
     -ngx_conf_parse()
        -ngx_http_block()                      http{}解析
           -递归解析
           -ngx_module_t->ctx->postconfiguration()    递归解析http{}后
           -->ngx_http_modsecurity_init()             注册各阶段的处理句柄
             -ngx_http_modsecurity_rewrite_handler()     NGX_HTTP_REWRITE_PHASE
             -ngx_http_modsecurity_pre_access_handler()  NGX_HTTP_PREACCESS_PHASE
             -ngx_http_modsecurity_log_handler()         NGX_HTTP_LOG_PHASE
             -ngx_http_modsecurity_header_filter()       回应头处理阶段
             -ngx_http_modsecurity_body_filter()         响应体处理阶段
           -ngx_http_init_phase_handlers()
     -...
  -for(;;)                                     worker处理循环
     -ngx_process_events_and_timers()
     -ngx_event_process_posted()
        -ngx_http_init_connection()
          -ngx_http_wait_request_handler()
            -ngx_http_process_request_line()
              -ngx_http_process_request_headers()
                -ngx_http_process_request()
                  -ngx_http_handler()
                    -ngx_http_core_run_phases()各阶段处理句柄执行
                  -ngx_http_run_posted_requests()
  #+END_EXAMPLE

* TODO 处理请求头
ab

* TODO 处理请求体
ab

* TODO 日志
ab

* TODO 处理回应头
ab

* TODO 处理回应体
ab

* 参考
  - [[https://github.com/sqlfocus/nginx][nginx代码导读]]





